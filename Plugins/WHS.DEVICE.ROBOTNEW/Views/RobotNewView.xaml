<Page
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:WHS.DEVICE.ROBOTNEW.Views"
      xmlns:vm="clr-namespace:WHS.DEVICE.ROBOTNEW.ViewModels"
      xmlns:model="clr-namespace:WHS.DEVICE.ROBOTNEW.Models"
      xmlns:cal="http://www.caliburnproject.org"
      xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
      xmlns:lex="http://wpflocalizeextension.codeplex.com"
      xmlns:Commons="clr-namespace:WHS.DEVICE.ROBOTNEW.Commons"
      xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
      x:Name="page"
      x:Class="WHS.DEVICE.ROBOTNEW.Views.RobotNewView"
      lex:LocalizeDictionary.DesignCulture="zh-CN"
      lex:LocalizeDictionary.OutputMissingKeys="True"
      lex:ResxLocalizationProvider.DefaultAssembly="WHS.DEVICE.ROBOTNEW"
      lex:ResxLocalizationProvider.DefaultDictionary="Strings"
      mc:Ignorable="d" 
      Title="{lex:Loc Key=ROBOTNEW.Content.Title}"
      d:DesignHeight="450" d:DesignWidth="800">
    <Page.Resources>
        <Commons:DoubleConver x:Key="DoubleConver"/>
    </Page.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="60"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="50"/>
        </Grid.RowDefinitions>
        <ItemsControl Grid.Row="0"  ItemsSource="{Binding agvViewModelItemsSource}">
            <ItemsControl.Template>
                <ControlTemplate TargetType="{x:Type ItemsControl}">
                    <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Disabled" >
                        <WrapPanel HorizontalAlignment="Stretch"  Height="50" Orientation="Horizontal" IsItemsHost="True" ScrollViewer.CanContentScroll="True"/>
                    </ScrollViewer>
                </ControlTemplate>
            </ItemsControl.Template>
            <ItemsControl.ItemTemplate>
                <DataTemplate DataType="{x:Type vm:AGVUCViewModel}">
                    <Border Width="100"  BorderBrush="Black" BorderThickness="1" Margin="5,5,5,5">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="50*"></ColumnDefinition>
                                <ColumnDefinition Width="50*"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="50*"></RowDefinition>
                                <RowDefinition Height="50*"></RowDefinition>
                            </Grid.RowDefinitions>
                            <Image Grid.Column="0" Grid.Row="0" Grid.RowSpan="2"  Source="/WHS.DEVICE.ROBOTNEW;component/Images/car.png"></Image>
                            <Label Grid.Column="1" Grid.Row="0"  Padding="0" Margin="0" Content="{Binding Code}"></Label>

                            <Button  Width="30" Height="30" Padding="0,0,0,10"
                                    Grid.Column="1" Grid.Row="1" 
                                    Background="Transparent"
                                    cal:Message.Attach="[Event Click] = [Action headerItemClick($source,$dataContext)]" >
                                <iconPacks:FontAwesome Width="10"
                                          Height="10"
                                          Kind="ChevronCircleDownSolid" />
                            </Button>
                            <Popup PopupAnimation="Slide" Width="180" Height="250"  PlacementTarget="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Border},AncestorLevel=1}}"
                                   IsOpen="{Binding IsOpen}" Placement="Bottom" AllowsTransparency="True" StaysOpen="False">
                                <Grid>
                                    <Rectangle Fill="White" Margin="5" Opacity="0.8" RadiusY="2" RadiusX="2">
                                        <Rectangle.Effect>
                                            <DropShadowEffect Color="#FFBBBBBB" Direction="0" BlurRadius="15" RenderingBias="Quality" ShadowDepth="1"></DropShadowEffect>
                                        </Rectangle.Effect>
                                    </Rectangle>
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="25"></RowDefinition>
                                            <RowDefinition Height="25"></RowDefinition>
                                            <RowDefinition Height="25"></RowDefinition>
                                            <RowDefinition Height="25"></RowDefinition>
                                            <RowDefinition Height="25"></RowDefinition>
                                            <RowDefinition Height="30"></RowDefinition>
                                            <RowDefinition Height="*"></RowDefinition>
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="50*"></ColumnDefinition>
                                            <ColumnDefinition Width="50*"></ColumnDefinition>
                                        </Grid.ColumnDefinitions>
                                        <Label Grid.Row="1" Grid.Column="0" HorizontalAlignment="Center" Padding="1"  Content="X:"></Label>
                                        <Label Grid.Row="1" Grid.Column="1" HorizontalAlignment="Center" Padding="1"  Content="{Binding RowIndex}"></Label>
                                        <Label Grid.Row="2" Grid.Column="0" HorizontalAlignment="Center"  Padding="1"  Content="Y:"></Label>
                                        <Label Grid.Row="2" Grid.Column="1" HorizontalAlignment="Center"  Padding="1" Content="{Binding ColumnIndex}"></Label>
                                        <Label Grid.Row="3" Grid.Column="0" HorizontalAlignment="Center"  Padding="1"  Content="Floor:"></Label>
                                        <Label Grid.Row="3" Grid.Column="1" HorizontalAlignment="Center"  Padding="1"  Content="{Binding Floor}"></Label>
                                        <Label Grid.Row="4" Grid.Column="0" HorizontalAlignment="Center"  Padding="1"  Content="Power:"></Label>
                                        <Label Grid.Row="4" Grid.Column="1" HorizontalAlignment="Center"  Padding="1"  Content="{Binding Power}"></Label>
                                        <Button Width="100" Margin="5,5,0,0" Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="2" HorizontalContentAlignment="Center"
                                                 cal:Message.Attach="[Event Click] = [Action locationClick($source,$dataContext)]">
                                            <iconPacks:FontAwesome Width="10"
                                          Height="10"
                                          Kind="LocationArrowSolid" />
                                        </Button>


                                    </Grid>
                                </Grid>
                            </Popup>
                        </Grid>
                    </Border>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>


        <Controls:MetroTabControl x:Name="MetroTabControl" Grid.Row="1" 
                                          SelectedIndex="{Binding tabSelectedIndex,Mode=TwoWay}"
                                          SelectedItem="{Binding tabSelectedItem,Mode=TwoWay}"
                                          TabStripPlacement="Right"
                                          KeepVisualTreeInMemoryWhenChangingTabs="True"
                                      ItemsSource="{Binding agvPlatformModels}">
            <Controls:MetroTabControl.ItemContainerStyle>
                <Style TargetType="{x:Type  Controls:MetroTabItem}">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Controls:HeaderedControlHelper.HeaderFontFamily" Value="Arial Black"/>
                    <Setter Property="Controls:HeaderedControlHelper.HeaderFontSize" Value="16"/>
                    <Setter Property="Controls:HeaderedControlHelper.HeaderFontStretch" Value="Normal"/>
                    <Setter Property="Controls:HeaderedControlHelper.HeaderFontWeight" Value="Normal"/>
                    <Setter Property="Controls:TabControlHelper.Underlined" Value="None"/>
                    <Setter Property="Controls:TabControlHelper.UnderlineBrush" Value="Transparent"/>
                </Style>
            </Controls:MetroTabControl.ItemContainerStyle>
            <Controls:MetroTabControl.ItemTemplate>
                <DataTemplate>
                    <TextBlock FontSize="24" Text = "{Binding  Floor,StringFormat={}{0}层}"></TextBlock>
                </DataTemplate>
            </Controls:MetroTabControl.ItemTemplate>
            <Controls:MetroTabControl.ContentTemplate>
                <DataTemplate>
                    <Grid Background="#FFD5E6E9">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="30"></ColumnDefinition>
                            <ColumnDefinition Width="100*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <WrapPanel Grid.Row="0"  Grid.Column="0">
                            <Slider Margin="5"  Height="125"   x:Name="Scale"
                            LargeChange="0.1"
                            Maximum="5"
                            Minimum="0"
                            Orientation="Vertical"
                            SmallChange="0.01"
                            TickFrequency="5"
                            AutoToolTipPlacement="TopLeft"
                            Value="{Binding ScaleValue}" />

                            <Slider Margin="5"  Height="125"  x:Name="Scalex"
                            LargeChange="5"
                            Maximum="180"
                            Minimum="-180"
                            Orientation="Vertical"
                            SmallChange="1"
                            TickFrequency="5"
                            AutoToolTipPlacement="TopLeft"
                            Value="0" />
                            <Slider Margin="5"   Height="125" x:Name="Scaley"
                               LargeChange="5"
                            Maximum="180"
                            Minimum="-180"
                            Orientation="Vertical"
                            SmallChange="1"
                            TickFrequency="5"
                            AutoToolTipPlacement="TopLeft"
                            Value="0" />
                        </WrapPanel>
    
                        <Border  Grid.Row="0" Grid.Column="1" ClipToBounds="True"
                                 cal:Message.Attach="[Event PreviewMouseDown] = [Action outsidewrapper_PreviewMouseDown($source,$eventArgs)];
                                 [Event PreviewMouseMove] = [Action outsidewrapper_PreviewMouseMove($source,$eventArgs)];
                                 [Event PreviewMouseUp] = [Action outside_PreviewMouseUp($source,$eventArgs)];
                                 [Event PreviewMouseWheel] = [Action outside_PreviewMouseWheel($source,$eventArgs)]">
                              
                            <Grid>
                                <ItemsControl ItemsSource="{Binding canvasBackgroudItemsSource}">
                                    <ItemsControl.Template>
                                        <ControlTemplate TargetType="{x:Type ItemsControl}">
                                            <Canvas Background="Transparent" 
                            x:Name="CanvasBackgroudPanel"
                            IsItemsHost="True"
                            RenderTransformOrigin="0.5,0.5">
                                                <Canvas.RenderTransform>
                                                    <TransformGroup>
                                                        <ScaleTransform ScaleX="{Binding Value, ElementName=Scale, TargetNullValue=1}"
                                                ScaleY="{Binding Value, ElementName=Scale, TargetNullValue=1}"/>
                                                        <SkewTransform AngleX="{Binding Value, ElementName=Scalex, TargetNullValue=0}"
                                                                       AngleY="{Binding Value, ElementName=Scaley, TargetNullValue=0}" />
                                                        <RotateTransform />
                                                        <TranslateTransform X="{Binding DriftX}"
                                            Y="{Binding DriftY}"/>
                                                    </TransformGroup>
                                                </Canvas.RenderTransform>
                                            </Canvas>
                                        </ControlTemplate>
                                    </ItemsControl.Template>
                                </ItemsControl>
                                <ItemsControl ItemsSource="{Binding canvasPathItemsSource}">
                                    <ItemsControl.Template>
                                        <ControlTemplate TargetType="{x:Type ItemsControl}">
                                            <Canvas Background="Transparent"
                            x:Name="CanvasPathPanel"
                            IsItemsHost="True" 
                            RenderTransformOrigin="0.5,0.5">
                                                <Canvas.RenderTransform>
                                                    <TransformGroup>
                                                        <ScaleTransform ScaleX="{Binding Value, ElementName=Scale, TargetNullValue=1}"
                                                ScaleY="{Binding Value, ElementName=Scale, TargetNullValue=1}"/>
                                                        <SkewTransform AngleX="{Binding Value, ElementName=Scalex, TargetNullValue=0}"
                                                                       AngleY="{Binding Value, ElementName=Scaley, TargetNullValue=0}" />
                                                        <RotateTransform  />
                                                        <TranslateTransform X="{Binding DriftX}"
                                            Y="{Binding DriftY}"/>
                                                    </TransformGroup>
                                                </Canvas.RenderTransform>
                                            </Canvas>
                                        </ControlTemplate>
                                    </ItemsControl.Template>
                                </ItemsControl>
                                <ListBox  ItemsSource="{Binding canvasItemsSource}"  x:Name="inside"                                 
                                     SelectedItem="{Binding DataContext.selectAGVItem, ElementName=page}"
                                          SizeChanged="inside_SizeChanged"
                                     SelectionMode="Single">
                                    <ListBox.Template>
                                        <ControlTemplate TargetType="{x:Type ListBox}">
                                            <Canvas Background="Transparent" x:Name="CanvasPanel" 
                                                IsItemsHost="True" 
                                                RenderTransformOrigin="0.5,0.5" 
                                                MouseMove="CanvasPanel_MouseMove">
                                                <Canvas.RenderTransform>
                                                    <TransformGroup>
                                                        <ScaleTransform ScaleX="{Binding Value, ElementName=Scale, TargetNullValue=1}"
                                                ScaleY="{Binding Value, ElementName=Scale, TargetNullValue=1}"/>
                                                        <SkewTransform AngleX="{Binding Value, ElementName=Scalex, TargetNullValue=0}"
                                                                       AngleY="{Binding Value, ElementName=Scaley, TargetNullValue=0}" />
                                                        <RotateTransform  />
                                                        <TranslateTransform X="{Binding DriftX}"
                                            Y="{Binding DriftY}"/>
                                                    </TransformGroup>
                                                </Canvas.RenderTransform>
                                            </Canvas>
                                        </ControlTemplate>
                                    </ListBox.Template>
                                    <ListBox.ItemContainerStyle>
                                        <Style TargetType="{x:Type ListBoxItem}">
                                            <Setter Property="Canvas.Left" Value="{Binding (Canvas.Left)}"/>
                                            <Setter Property="Canvas.Top" Value="{Binding (Canvas.Top)}"/>
                                            <Setter Property="Padding" Value="0"/>
                                            <Setter Property="BorderThickness" Value="0"/>
                                            <Setter Property="Margin" Value="0"/>
                                            <Style.Triggers>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="IsMouseOver" Value="True"/>
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="BorderThickness" Value="1"/>
                                                </MultiTrigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="IsMouseOver" Value="False"/>
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="BorderThickness" Value="0"/>
                                                </MultiTrigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                                        <Condition Property="IsSelected" Value="True"/>
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="BorderThickness" Value="0"/>
                                                </MultiTrigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                                        <Condition Property="IsSelected" Value="True"/>
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="BorderThickness" Value="1"/>
                                                </MultiTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ListBox.ItemContainerStyle>
                                </ListBox>
                            </Grid>
                        </Border>
                    </Grid>
                </DataTemplate>
            </Controls:MetroTabControl.ContentTemplate>

        </Controls:MetroTabControl>


        <WrapPanel Grid.Row="2">
            <Label Margin="5,5,0,0" Content="{Binding ReadFile}"/>
            <Button Margin="5,5,0,0" cal:Message.Attach="[Event Click] = [Action Reset($source,$dataContext)]">
                <iconPacks:FontAwesome Width="25"  Kind="RecycleSolid"></iconPacks:FontAwesome>
            </Button>
            <Label Margin="5,5,0,0">列:</Label>
            <TextBox Margin="5,5,0,0" Width="25" Text="{Binding x}"></TextBox>
            <Label Margin="5,5,0,0">行:</Label>
            <TextBox Margin="5,5,0,0" Width="25" Text="{Binding y}"></TextBox>
            <Label Margin="5,5,0,0">目标楼层:</Label>
            <TextBox Margin="5,5,0,0" Width="25" Text="{Binding targetFloor}"></TextBox>
            <Button Margin="5,5,0,0" cal:Message.Attach="[Event Click] = [Action LiftMove()]">提升机移动</Button>
            <Label Margin="5,5,0,0" Content="{Binding LiftMsg}"/>
            <Label Margin="5,5,0,0" Content="{Binding PageSize}"/>

            <Label Margin="5,5,0,0" Content="{Binding tabSelectedItem.DriftX,StringFormat={}偏移X:0}"/>
            <Label Margin="5,5,0,0" Content="{Binding tabSelectedItem.DriftY,StringFormat={}偏移Y:0}"/>

            <Label Margin="5,5,0,0" x:Name="lb_InfoMessage"  Visibility="Hidden"/>
        </WrapPanel>
    </Grid>
</Page>
